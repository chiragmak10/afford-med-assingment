{"version":3,"sources":["Login.tsx","Navbar.tsx","App.tsx","index.tsx"],"names":["Login","formik","useFormik","initialValues","email","firstname","lastname","password","onSubmit","e","axios","post","values","headers","then","resp","console","log","error","handleSubmit","htmlFor","name","id","type","onChange","handleChange","value","Navbar","AppBar","position","Toolbar","Grid","container","style","flex","item","Typography","variant","color","Button","onClick","textDecoration","to","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qLAKaA,EAAY,WACvB,IAAMC,EAASC,YAAU,CACvBC,cAAe,CACbC,MAAO,GACPC,UAAW,GACXC,SAAU,GACVC,SAAU,IAEZC,SAAU,SAACC,GAKTC,IAAMC,KAAK,wBAAyBV,EAAOW,OAAQ,CAAEC,QAJrC,CACd,eAAgB,qCAChB,8BAA+B,OAE+BC,MAC9D,SAACC,GACCC,QAAQC,IAAIF,MAEd,SAACG,GACCF,QAAQC,IAAIC,SAMpB,OACE,uBAAMV,SAAUP,EAAOkB,aAAvB,UACE,uBAAOC,QAAQ,YAAf,wBACA,uBACEC,KAAK,YACLC,GAAG,YACHC,KAAK,YACLC,SAAUvB,EAAOwB,aACjBC,MAAOzB,EAAOW,OAAOP,YAEvB,uBAAOe,QAAQ,WAAf,wBACA,uBACEC,KAAK,WACLC,GAAG,WACHC,KAAK,WACLC,SAAUvB,EAAOwB,aACjBC,MAAOzB,EAAOW,OAAON,WAEvB,uBAAOc,QAAQ,QAAf,wBACA,uBACEC,KAAK,QACLC,GAAG,QACHC,KAAK,QACLC,SAAUvB,EAAOwB,aACjBC,MAAOzB,EAAOW,OAAOR,QAEvB,uBAAOgB,QAAQ,WAAf,uBACA,uBACEC,KAAK,WACLC,GAAG,WACHC,KAAK,WACLC,SAAUvB,EAAOwB,aACjBC,MAAOzB,EAAOW,OAAOL,WAEvB,wBAAQgB,KAAK,SAAb,0B,yDC3DOI,EAAa,WACxB,OACE,cAACC,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAME,MAAO,CAAEC,KAAM,GAAKC,MAAI,EAA9B,SACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,MAAM,UAA/B,0BAIF,cAACC,EAAA,EAAD,CAAQC,QAAS,aAAUF,MAAM,UAAjC,SACE,eAAC,IAAD,CACEL,MAAO,CAAEQ,eAAgB,OAAQH,MAAO,SACxCI,GAAG,UAFL,UAIG,IAJH,QAKQ,SAGV,cAACH,EAAA,EAAD,CAAQD,MAAM,UAAd,SACE,eAAC,IAAD,CACEL,MAAO,CAAEQ,eAAgB,OAAQH,MAAO,SACxCI,GAAG,UAFL,UAIG,IAJH,UAKU,iBCvBTC,EAAU,WACrB,OACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,UAAUC,UAAW9C,IACvC,cAAC,IAAD,CAAO4C,OAAK,EAACC,KAAK,SAASC,UAAW9C,WCR9C+C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ecf8bdc1.chunk.js","sourcesContent":["import React, { FC, ReactElement, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Formik, useFormik } from \"formik\";\r\nimport { TextField } from \"@material-ui/core\";\r\n\r\nexport const Login: FC = (): ReactElement => {\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: \"\",\r\n      firstname: \"\",\r\n      lastname: \"\",\r\n      password: \"\",\r\n    },\r\n    onSubmit: (e): void => {\r\n      const headers = {\r\n        \"Content-Type\": \"application/x-www-form-urlencoded'\",\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n      };\r\n      axios.post(\"localhost:3030/signup\", formik.values, { headers }).then(\r\n        (resp) => {\r\n          console.log(resp);\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n    },\r\n  });\r\n\r\n  return (\r\n    <form onSubmit={formik.handleSubmit}>\r\n      <label htmlFor=\"firstname\">First Name</label>\r\n      <input\r\n        name=\"firstname\"\r\n        id=\"firstname\"\r\n        type=\"firstname\"\r\n        onChange={formik.handleChange}\r\n        value={formik.values.firstname}\r\n      />\r\n      <label htmlFor=\"lastname\">First Name</label>\r\n      <input\r\n        name=\"lastname\"\r\n        id=\"lastname\"\r\n        type=\"lastname\"\r\n        onChange={formik.handleChange}\r\n        value={formik.values.lastname}\r\n      />\r\n      <label htmlFor=\"email\">First Name</label>\r\n      <input\r\n        name=\"email\"\r\n        id=\"email\"\r\n        type=\"email\"\r\n        onChange={formik.handleChange}\r\n        value={formik.values.email}\r\n      />\r\n      <label htmlFor=\"Password\"> Password</label>\r\n      <input\r\n        name=\"password\"\r\n        id=\"password\"\r\n        type=\"password\"\r\n        onChange={formik.handleChange}\r\n        value={formik.values.password}\r\n      />\r\n      <button type=\"submit\"> Submit </button>\r\n    </form>\r\n  );\r\n};\r\n","import { AppBar, Toolbar, Grid, Typography, Button } from \"@material-ui/core\";\r\nimport { FC, ReactElement } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const Navbar: FC = (): ReactElement => {\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Toolbar>\r\n        <Grid container>\r\n          <Grid style={{ flex: 1 }} item>\r\n            <Typography variant=\"h5\" color=\"inherit\">\r\n              Pharm Easy\r\n            </Typography>\r\n          </Grid>\r\n          <Button onClick={() => {}} color=\"inherit\">\r\n            <Link\r\n              style={{ textDecoration: \"none\", color: \"white\" }}\r\n              to=\"/signup\"\r\n            >\r\n              {\" \"}\r\n              Login{\" \"}\r\n            </Link>\r\n          </Button>\r\n          <Button color=\"inherit\">\r\n            <Link\r\n              style={{ textDecoration: \"none\", color: \"white\" }}\r\n              to=\"/signup\"\r\n            >\r\n              {\" \"}\r\n              Sign Up{\" \"}\r\n            </Link>\r\n          </Button>\r\n        </Grid>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n","import { ReactElement } from \"react\";\nimport { FC } from \"react\";\nimport { Login } from \"./Login\";\n\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Navbar } from \"./Navbar\";\nexport const App: FC = (): ReactElement => {\n  return (\n    <Router>\n      <Navbar />\n      <Switch>\n        <Route exact path=\"/signup\" component={Login} />\n        <Route exact path=\"/login\" component={Login} />\n      </Switch>\n    </Router>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}